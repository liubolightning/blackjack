// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

window.App = (function(_super) {
  __extends(App, _super);

  function App() {
    return App.__super__.constructor.apply(this, arguments);
  }

  App.prototype.initialize = function() {
    return this.reset();
  };

  App.prototype.reset = function() {
    var deck;
    this.set('deck', deck = new Deck());
    this.set('playerHand', deck.dealPlayer());
    this.set('dealerHand', deck.dealDealer());
    this.get('playerHand').on('lose', this.reset, this);
    this.get('dealerHand').on('add stand', this.decide, this);
    this.get('dealerHand').on('lose', this.reset, this);
    return console.log("reset App");
  };

  App.prototype.decide = function() {
    var dealerScore, playerScore;
    dealerScore = this.get('dealerHand').scores()[0];
    playerScore = this.get('playerHand').scores()[0];
    if (dealerScore >= 17 && dealerScore <= 21) {
      if (dealerScore > playerScore) {
        alert("You lose");
      } else {
        alert("You win");
      }
      return this.reset();
    }
  };

  return App;

})(Backbone.Model);
